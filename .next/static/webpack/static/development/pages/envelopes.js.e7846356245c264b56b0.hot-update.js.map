{"version":3,"file":"static/webpack/static/development/pages/envelopes.js.e7846356245c264b56b0.hot-update.js","sources":["webpack:///./pages/envelopes.js","webpack:///./sections/envelopes/content/Content.styled.js","webpack:///./sections/envelopes/content/index.js"],"sourcesContent":["import Layout from '../components/Layout';\nimport Intro from '../sections/envelopes/intro';\nimport Content from '../sections/envelopes/content';\n\nexport default function Envelopes() {\n    return (\n        <Layout>\n            <Intro/>\n            <Content/>\n        </Layout>\n    )\n}\n","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div`\n    width: 100%;\n    max-width: 800px;\n    \n`","import * as S from './Content.styled'\nimport * as T from '../../../components/Typography'\nimport * as G from '../../../components/Grid'\n\nconst Content = () => (\n    <S.ContentWrapper>\n        <T.Body>\n            The Envelope System is a popular budgeting technique \n            that helps prevent overspending. How it works is that \n            we would begin by finding a handful of old fashioned \n            brown envelopes and label them with the spending \n            categories that we want to keep an eye on like \n            groceries, coffee, transit. Then we would withdraw \n            an amount of cash for each envelope: for example; \n            $80 for groceries, and place that money into the \n            envelope. We’d then go about our week, spending \n            from each envelope until that envelope is empty, \n            in which case we’d have a clear indicator that we’ve \n            overspent and it’s time to stop.\n        </T.Body>\n        <G.Medium/>\n    </S.ContentWrapper>\n)\n\nexport default Content"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAEA;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AACA;AAmBA;;;;A","sourceRoot":""}